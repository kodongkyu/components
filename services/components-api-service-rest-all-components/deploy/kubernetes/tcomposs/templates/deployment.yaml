apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ include "tcomposs.fullname" . }}
  labels:
{{ include "tcomposs.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount | int }}
  template:
    metadata:
      labels:
        app: {{ include "tcomposs.name" . }}
        release: {{ .Release.Name }}
    spec:
      {{- if ne (default "" .Values.image.registry ) "" }}
      imagePullSecrets:
        - name: {{ include "tcomposs.registryKey" . }}
      {{- end }}
      containers:
        - name: {{ include "tcomposs.fullname" . }}
          image: {{ include "tcomposs.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: service-port
              containerPort: {{ .Values.service.defaultPort }}
          envFrom:
            - configMapRef:
                name: {{ include "tcomposs.fullname" . }}
          livenessProbe:
            httpGet:
              path: /tcomp/health
              port: service-port
            initialDelaySeconds: 50
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /tcomp/health
              port: service-port
            initialDelaySeconds: 20
            timeoutSeconds: 5
          volumeMounts:
            - name: spark-config
              mountPath: /spark-cluster-config
          {{- if .Values.resources }}
          resources:
            {{ toYaml .Values.resources | indent 12 }}
          {{- end }}
      volumes:
        - name: spark-config
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.volumeClaimName }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
      {{- if .Values.nodeAffinity }}
      affinity:
        nodeAffinity:
          {{ toYaml .Values.nodeAffinity | indent 10 }}
      {{- end }}